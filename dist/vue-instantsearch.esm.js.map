{"version":3,"file":"vue-instantsearch.esm.js","sources":["../src/mixins/suit.js","../src/util/suit.js","../src/util/warn.js","../src/mixins/widget.js","../src/components/Autocomplete.vue","../src/mixins/panel.js","../src/components/Breadcrumb.vue","../src/components/ClearRefinements.vue","../src/components/Configure.js","../src/components/ConfigureRelatedItems.js","../src/components/CurrentRefinements.vue","../src/components/HierarchicalMenuList.vue","../src/components/HierarchicalMenu.vue","../src/components/Highlight.vue","../src/components/Hits.vue","../src/components/HitsPerPage.vue","../src/components/Index.js","../src/util/polyfills.js","../src/util/createInstantSearchComponent.js","../src/components/InstantSearch.js","../src/components/InstantSearchSsr.js","../src/components/InfiniteHits.vue","../src/components/Menu.vue","../src/components/MenuSelect.vue","../src/components/NumericMenu.vue","../src/components/Pagination.vue","../src/components/Panel.vue","../src/components/PoweredBy.vue","../src/components/QueryRuleContext.js","../src/components/QueryRuleCustomData.vue","../src/components/RangeInput.vue","../src/components/RatingMenu.vue","../src/components/SearchInput.vue","../src/components/RefinementList.vue","../src/components/StateResults.vue","../src/connectors/connectStateResults.js","../src/components/SearchBox.vue","../src/components/Snippet.vue","../src/components/SortBy.vue","../src/components/Stats.vue","../src/components/ToggleRefinement.vue","../src/components/VoiceSearch.vue","../src/plugin.js","../src/util/createInstantSearch.js"],"sourcesContent":["import suit from '../util/suit';\n\nexport const createSuitMixin = ({ name }) => ({\n  props: {\n    classNames: {\n      type: Object,\n      default: undefined,\n    },\n  },\n  methods: {\n    suit(element, modifier) {\n      const className = suit(name, element, modifier);\n      const userClassName = this.classNames && this.classNames[className];\n      if (userClassName) {\n        return [className, userClassName].join(' ');\n      }\n      return className;\n    },\n  },\n});\n","/**\n * Create class names like ais-widgetName-element--modifier\n *\n * @param {string} widgetName first part\n * @param {string} element part separated by -\n * @param {string} modifier final part, separated by --\n *\n * @returns {string} the composed class name\n */\nexport default function suit(widgetName, element, modifier) {\n  if (!widgetName) {\n    throw new Error('You need to provide `widgetName` in your data');\n  }\n\n  const elements = [`ais-${widgetName}`];\n\n  if (element) {\n    elements.push(`-${element}`);\n  }\n\n  if (modifier) {\n    elements.push(`--${modifier}`);\n  }\n\n  return elements.join('');\n}\n","const cache = new Set();\n\nexport function warn(message) {\n  if (cache.has(message)) return;\n  cache.add(message);\n  // eslint-disable-next-line no-console\n  console.warn(message);\n}\n","import { warn } from '../util/warn';\n\nexport const createWidgetMixin = ({ connector } = {}) => ({\n  inject: {\n    instantSearchInstance: {\n      from: '$_ais_instantSearchInstance',\n      default() {\n        const tag = this.$options._componentTag;\n        throw new TypeError(\n          `It looks like you forgot to wrap your Algolia search component \"<${tag}>\" inside of an \"<ais-instant-search>\" component.`\n        );\n      },\n    },\n    getParentIndex: {\n      from: '$_ais_getParentIndex',\n      default() {\n        return () => this.instantSearchInstance;\n      },\n    },\n  },\n  data() {\n    return {\n      state: null,\n    };\n  },\n  created() {\n    if (typeof connector === 'function') {\n      this.factory = connector(this.updateState, () => {});\n      this.widget = this.factory(this.widgetParams);\n      this.getParentIndex().addWidgets([this.widget]);\n\n      const { hydrated, started } = this.instantSearchInstance;\n      if ((!started && hydrated) || this.$isServer) {\n        if (typeof this.instantSearchInstance.__forceRender !== 'function') {\n          throw new Error(\n            'You are using server side rendering with <ais-instant-search> instead of <ais-instant-search-ssr>.'\n          );\n        }\n        this.instantSearchInstance.__forceRender(this.widget);\n      }\n    } else if (connector !== true) {\n      warn(\n        `You are using the InstantSearch widget mixin, but didn't provide a connector.\nWhile this is technically possible, and will give you access to the Helper,\nit's not the recommended way of making custom components.\n\nIf you want to disable this message, pass { connector: true } to the mixin.\n\nRead more on using connectors: https://alg.li/vue-custom`\n      );\n    }\n  },\n  beforeDestroy() {\n    if (\n      this.widget &&\n      this.widget.dispose &&\n      this.instantSearchInstance.started // a widget can't be removed if IS is not started\n    ) {\n      this.getParentIndex().removeWidgets([this.widget]);\n    }\n  },\n  watch: {\n    widgetParams: {\n      handler(nextWidgetParams) {\n        this.state = null;\n        // a widget can't be removed if IS is not started\n        if (this.widget.dispose && this.instantSearchInstance.started) {\n          this.getParentIndex().removeWidgets([this.widget]);\n        }\n        this.widget = this.factory(nextWidgetParams);\n        this.getParentIndex().addWidgets([this.widget]);\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    updateState(state = {}, isFirstRender) {\n      if (!isFirstRender) {\n        // Avoid updating the state on first render\n        // otherwise there will be a flash of placeholder data\n        this.state = state;\n      }\n    },\n  },\n});\n","<template>\n  <div\n    :class=\"suit()\"\n    v-if=\"state\"\n  >\n    <slot\n      :refine=\"state.refine\"\n      :current-refinement=\"state.currentRefinement\"\n      :indices=\"state.indices\"\n    >\n      <p>This widget doesn't render anything without a filled in default slot.</p>\n      <p>query, function to refine and results are provided.</p>\n      <pre>refine: Function</pre>\n      <pre>currentRefinement: \"{{ state.currentRefinement }}\"</pre>\n      <details>\n        <summary><code>indices</code>:</summary>\n        <pre>{{ state.indices }}</pre>\n      </details>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectAutocomplete } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisAutocomplete',\n  mixins: [\n    createWidgetMixin({ connector: connectAutocomplete }),\n    createSuitMixin({ name: 'Autocomplete' }),\n  ],\n  props: {\n    escapeHTML: {\n      type: Boolean,\n      required: false,\n      default: true,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        escapeHTML: this.escapeHTML,\n      };\n    },\n  },\n};\n</script>\n","import Vue from 'vue';\n\nexport const PANEL_EMITTER_NAMESPACE = 'instantSearchPanelEmitter';\nexport const PANEL_CHANGE_EVENT = 'PANEL_CHANGE_EVENT';\n\nexport const createPanelProviderMixin = () => ({\n  props: {\n    emitter: {\n      type: Object,\n      required: false,\n      default() {\n        return new Vue({\n          name: 'PanelProvider',\n        });\n      },\n    },\n  },\n  provide() {\n    return {\n      [PANEL_EMITTER_NAMESPACE]: this.emitter,\n    };\n  },\n  data() {\n    return {\n      canRefine: true,\n    };\n  },\n  created() {\n    this.emitter.$on(PANEL_CHANGE_EVENT, value => {\n      this.updateCanRefine(value);\n    });\n  },\n  beforeDestroy() {\n    this.emitter.$destroy();\n  },\n  methods: {\n    updateCanRefine(value) {\n      this.canRefine = value;\n    },\n  },\n});\n\nexport const createPanelConsumerMixin = ({ mapStateToCanRefine }) => ({\n  inject: {\n    emitter: {\n      from: PANEL_EMITTER_NAMESPACE,\n      default() {\n        return {\n          $emit: () => {},\n        };\n      },\n    },\n  },\n  data() {\n    return {\n      state: null,\n      hasAlreadyEmitted: false,\n    };\n  },\n  watch: {\n    state(nextState, previousState) {\n      if (!previousState || !nextState) {\n        return;\n      }\n\n      const previousCanRefine = mapStateToCanRefine(previousState);\n      const nextCanRefine = mapStateToCanRefine(nextState);\n\n      if (!this.hasAlreadyEmitted || previousCanRefine !== nextCanRefine) {\n        this.emitter.$emit(PANEL_CHANGE_EVENT, nextCanRefine);\n\n        this.hasAlreadyEmitted = true;\n      }\n    },\n  },\n});\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !state.canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"state.canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n    >\n      <ul :class=\"suit('list')\">\n        <li :class=\"[suit('item'), !state.items.length && suit('item', 'selected')]\">\n          <a\n            v-if=\"Boolean(state.items.length)\"\n            :href=\"state.createURL()\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine()\"\n          >\n            <slot name=\"rootLabel\">Home</slot>\n          </a>\n          <span v-else>\n            <slot name=\"rootLabel\">Home</slot>\n          </span>\n        </li>\n        <li\n          v-for=\"(item, index) in state.items\"\n          :key=\"item.label\"\n          :class=\"[suit('item'), isLastItem(index) && suit('item', 'selected')]\"\n        >\n          <span\n            :class=\"suit('separator')\"\n            aria-hidden=\"true\"\n          >\n            <slot name=\"separator\">></slot>\n          </span>\n          <a\n            v-if=\"!isLastItem(index)\"\n            :href=\"state.createURL(item.value)\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine(item.value)\"\n          >{{ item.label }}</a>\n          <span v-else>{{ item.label }}</span>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectBreadcrumb } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\n\nexport default {\n  name: 'AisBreadcrumb',\n  mixins: [\n    createWidgetMixin({ connector: connectBreadcrumb }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.canRefine,\n    }),\n    createSuitMixin({ name: 'Breadcrumb' }),\n  ],\n  props: {\n    attributes: {\n      type: Array,\n      required: true,\n    },\n    separator: {\n      type: String,\n      default: ' > ',\n    },\n    rootPath: {\n      type: String,\n      default: null,\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attributes: this.attributes,\n        separator: this.separator,\n        rootPath: this.rootPath,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    isLastItem(index) {\n      return this.state.items.length - 1 === index;\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :can-refine=\"canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n    >\n      <button\n        type=\"reset\"\n        :class=\"[suit('button'), !canRefine && suit('button', 'disabled')]\"\n        :disabled=\"!canRefine\"\n        @click.prevent=\"state.refine\"\n      >\n        <slot name=\"resetLabel\">Clear refinements</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectClearRefinements } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\n\nexport default {\n  name: 'AisClearRefinements',\n  mixins: [\n    createWidgetMixin({ connector: connectClearRefinements }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.hasRefinements,\n    }),\n    createSuitMixin({ name: 'ClearRefinements' }),\n  ],\n  props: {\n    // explicitly no default, since included and excluded are incompatible\n    // eslint-disable-next-line vue/require-default-prop\n    excludedAttributes: {\n      type: Array,\n    },\n    // explicitly no default, since included and excluded are incompatible\n    // eslint-disable-next-line vue/require-default-prop\n    includedAttributes: {\n      type: Array,\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        includedAttributes: this.includedAttributes,\n        excludedAttributes: this.excludedAttributes,\n        transformItems: this.transformItems,\n      };\n    },\n    canRefine() {\n      return this.state.hasRefinements;\n    },\n  },\n};\n</script>\n","import { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\nimport { connectConfigure } from 'instantsearch.js/es/connectors';\n\nexport default {\n  inheritAttrs: false,\n  name: 'AisConfigure',\n  mixins: [\n    createSuitMixin({ name: 'Configure' }),\n    createWidgetMixin({ connector: connectConfigure }),\n  ],\n  computed: {\n    widgetParams() {\n      return {\n        searchParameters: this.$attrs,\n      };\n    },\n  },\n  render(createElement) {\n    if (!this.state || !this.$scopedSlots.default) {\n      return null;\n    }\n\n    return createElement(\n      'div',\n      {\n        class: this.suit(),\n      },\n      [\n        this.$scopedSlots.default({\n          refine: this.state.refine,\n          searchParameters: this.state.widgetParams.searchParameters,\n        }),\n      ]\n    );\n  },\n};\n","import { createWidgetMixin } from '../mixins/widget';\nimport { EXPERIMENTAL_connectConfigureRelatedItems } from 'instantsearch.js/es/connectors';\n\nexport default {\n  inheritAttrs: false,\n  name: 'AisExperimentalConfigureRelatedItems',\n  mixins: [\n    createWidgetMixin({ connector: EXPERIMENTAL_connectConfigureRelatedItems }),\n  ],\n  props: {\n    hit: {\n      type: Object,\n      required: true,\n    },\n    matchingPatterns: {\n      type: Object,\n      required: true,\n    },\n    transformSearchParameters: {\n      type: Function,\n      required: false,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        hit: this.hit,\n        matchingPatterns: this.matchingPatterns,\n        transformSearchParameters: this.transformSearchParameters,\n      };\n    },\n  },\n  render() {\n    return null;\n  },\n};\n","<template>\n  <div\n    :class=\"[suit(), noRefinement && suit('','noRefinement')]\"\n    v-if=\"state\"\n  >\n    <slot\n      :refine=\"state.refine\"\n      :items=\"state.items\"\n      :createURL=\"state.createURL\"\n    >\n      <ul :class=\"suit('list')\">\n        <li\n          v-for=\"item in state.items\"\n          :key=\"item.attribute\"\n          :class=\"suit('item')\"\n        >\n          <slot\n            name=\"item\"\n            :refine=\"item.refine\"\n            :item=\"item\"\n            :createURL=\"state.createURL\"\n          >\n            <span :class=\"suit('label')\">{{ item.label | capitalize }}: </span>\n            <span\n              v-for=\"refinement in item.refinements\"\n              :key=\"createItemKey(refinement)\"\n              :class=\"suit('category')\"\n            >\n              <slot\n                name=\"refinement\"\n                :refine=\"item.refine\"\n                :refinement=\"refinement\"\n                :createURL=\"state.createURL\"\n              >\n                <span :class=\"suit('categoryLabel')\">\n                  <q v-if=\"refinement.attribute === 'query'\">{{ refinement.label }}</q>\n                  <template v-else>\n                    {{ refinement.label }}\n                  </template>\n                </span>\n                <button\n                  :class=\"suit('delete')\"\n                  @click=\"item.refine(refinement)\"\n                >\n                  ✕\n                </button>\n              </slot>\n            </span>\n          </slot>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectCurrentRefinements } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisCurrentRefinements',\n  mixins: [\n    createSuitMixin({ name: 'CurrentRefinements' }),\n    createWidgetMixin({ connector: connectCurrentRefinements }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.items.length > 0,\n    }),\n  ],\n  props: {\n    // no default because included and excluded are incompatible\n    // eslint-disable-next-line vue/require-default-prop\n    includedAttributes: {\n      type: Array,\n    },\n    // no default because included and excluded are incompatible\n    // eslint-disable-next-line vue/require-default-prop\n    excludedAttributes: {\n      type: Array,\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n  },\n  computed: {\n    noRefinement() {\n      return this.state && this.state.items.length === 0;\n    },\n    widgetParams() {\n      return {\n        includedAttributes: this.includedAttributes,\n        excludedAttributes: this.excludedAttributes,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    createItemKey({ attribute, value, type, operator }) {\n      return [attribute, type, value, operator].join(':');\n    },\n  },\n  filters: {\n    capitalize(value) {\n      if (!value) return '';\n      return (\n        value\n          .toString()\n          .charAt(0)\n          .toLocaleUpperCase() + value.toString().slice(1)\n      );\n    },\n  },\n};\n</script>\n","<template>\n  <ul\n    :class=\"[\n      suit('list'),\n      level > 0 && suit('list', 'child'),\n      suit('list', `lvl${level}`)\n    ]\"\n  >\n    <li\n      v-for=\"item in items\"\n      :key=\"item.value\"\n      :class=\"[\n        suit('item'),\n        item.data && suit('item', 'parent'),\n        item.isRefined && suit('item', 'selected')\n      ]\"\n    >\n      <a\n        :href=\"createURL(item.value)\"\n        :class=\"suit('link')\"\n        @click.prevent=\"refine(item.value)\"\n      >\n        <span :class=\"suit('label')\">{{ item.label }}</span>\n        <span :class=\"suit('count')\">{{ item.count }}</span>\n      </a>\n\n      <hierarchical-menu-list\n        v-if=\"item.data\"\n        :items=\"item.data\"\n        :level=\"level + 1\"\n        :refine=\"refine\"\n        :createURL=\"createURL\"\n        :suit=\"suit\"\n      />\n    </li>\n  </ul>\n</template>\n\n<script>\nexport default {\n  name: 'HierarchicalMenuList',\n  props: {\n    items: {\n      type: Array,\n      required: true,\n    },\n    level: {\n      type: Number,\n      required: true,\n    },\n    refine: {\n      type: Function,\n      required: true,\n    },\n    createURL: {\n      type: Function,\n      required: true,\n    },\n    suit: {\n      type: Function,\n      required: true,\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"canRefine\"\n      :can-toggle-show-more=\"state.canToggleShowMore\"\n      :is-showing-more=\"state.isShowingMore\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :toggle-show-more=\"state.toggleShowMore\"\n    >\n      <hierarchical-menu-list\n        :items=\"state.items\"\n        :level=\"0\"\n        :refine=\"state.refine\"\n        :createURL=\"state.createURL\"\n        :suit=\"suit\"\n      />\n\n      <button\n        v-if=\"showMore\"\n        :class=\"[\n          suit('showMore'),\n          !state.canToggleShowMore && suit('showMore', 'disabled')\n        ]\"\n        :disabled=\"!state.canToggleShowMore\"\n        @click.prevent=\"state.toggleShowMore\"\n      >\n        <slot\n          name=\"showMoreLabel\"\n          :is-showing-more=\"state.isShowingMore\"\n        >{{ state.isShowingMore ? 'Show less' : 'Show more' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectHierarchicalMenu } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport HierarchicalMenuList from './HierarchicalMenuList.vue';\nimport { createSuitMixin } from '../mixins/suit';\n\nconst mapStateToCanRefine = state => state.items.length > 0;\n\nexport default {\n  name: 'AisHierarchicalMenu',\n  mixins: [\n    createSuitMixin({ name: 'HierarchicalMenu' }),\n    createWidgetMixin({ connector: connectHierarchicalMenu }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine,\n    }),\n  ],\n  components: {\n    HierarchicalMenuList,\n  },\n  props: {\n    attributes: {\n      type: Array,\n      required: true,\n    },\n    limit: {\n      type: Number,\n      default: 10,\n    },\n    showMoreLimit: {\n      type: Number,\n      default: 20,\n    },\n    showMore: {\n      type: Boolean,\n      default: false,\n    },\n    sortBy: {\n      type: [Array, Function],\n      default() {\n        return ['name:asc'];\n      },\n    },\n    separator: {\n      type: String,\n      default: ' > ',\n    },\n    rootPath: {\n      type: String,\n      default: null,\n    },\n    showParentLevel: {\n      type: Boolean,\n      default: true,\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attributes: this.attributes,\n        limit: this.limit,\n        showMore: this.showMore,\n        showMoreLimit: this.showMoreLimit,\n        separator: this.separator,\n        rootPath: this.rootPath,\n        showParentLevel: this.showParentLevel,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems,\n      };\n    },\n    canRefine() {\n      return mapStateToCanRefine(this.state);\n    },\n  },\n};\n</script>\n","<template>\n  <span\n    :class=\"suit()\"\n    v-html=\"innerHTML\"\n  />\n</template>\n\n<script>\nimport instantsearch from 'instantsearch.js/es';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisHighlight',\n  mixins: [createSuitMixin({ name: 'Highlight' })],\n  props: {\n    hit: {\n      type: Object,\n      required: true,\n    },\n    attribute: {\n      type: String,\n      required: true,\n    },\n    highlightedTagName: {\n      type: String,\n      default: 'mark',\n    },\n  },\n  computed: {\n    innerHTML() {\n      return instantsearch.highlight({\n        attribute: this.attribute,\n        hit: this.hit,\n        highlightedTagName: this.highlightedTagName,\n      });\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :items=\"items\"\n      :insights=\"state.insights\"\n    >\n      <ol :class=\"suit('list')\">\n        <li\n          v-for=\"(item, itemIndex) in items\"\n          :key=\"item.objectID\"\n          :class=\"suit('item')\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n            :index=\"itemIndex\"\n            :insights=\"state.insights\"\n          >objectID: {{ item.objectID }}, index: {{ itemIndex }}</slot>\n        </li>\n      </ol>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisHits',\n  mixins: [\n    createWidgetMixin({ connector: connectHitsWithInsights }),\n    createSuitMixin({ name: 'Hits' }),\n  ],\n  props: {\n    escapeHTML: {\n      type: Boolean,\n      default: true,\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n  },\n  computed: {\n    items() {\n      return this.state.hits;\n    },\n    widgetParams() {\n      return {\n        escapeHTML: this.escapeHTML,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :items=\"state.items\"\n      :refine=\"state.refine\"\n      :hasNoResults=\"state.hasNoResults\"\n    >\n      <select\n        :class=\"suit('select')\"\n        v-model=\"selected\"\n        @change=\"handleChange\"\n      >\n        <option\n          v-for=\"item in state.items\"\n          :key=\"item.value\"\n          :class=\"suit('option')\"\n          :value=\"item.value\"\n        >{{ item.label }}</option>\n      </select>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectHitsPerPage } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisHitsPerPage',\n  mixins: [\n    createSuitMixin({ name: 'HitsPerPage' }),\n    createWidgetMixin({ connector: connectHitsPerPage }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => !state.hasNoResults,\n    }),\n  ],\n  props: {\n    items: {\n      type: Array,\n      required: true,\n      default: () => [],\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n  },\n  data() {\n    return {\n      selected: this.items.find(item => item.default === true).value,\n    };\n  },\n  computed: {\n    widgetParams() {\n      return {\n        items: this.items,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    handleChange() {\n      this.state.refine(this.selected);\n    },\n  },\n};\n</script>\n","import { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport indexWidget from 'instantsearch.js/es/widgets/index/index';\n\n// wrapped in a dummy function, since indexWidget doesn't render\nconst connectIndex = () => indexWidget;\n\nexport default {\n  name: 'AisIndex',\n  mixins: [\n    createSuitMixin({ name: 'Index' }),\n    createWidgetMixin({ connector: connectIndex }),\n  ],\n  provide() {\n    return {\n      // The widget is created & registered by widgetMixin, accessor is needed\n      // because provide is not reactive.\n      $_ais_getParentIndex: () => this.widget,\n    };\n  },\n  props: {\n    indexName: {\n      type: String,\n      required: true,\n    },\n    indexId: {\n      type: String,\n      required: false,\n    },\n  },\n  render(createElement) {\n    return createElement('div', {}, this.$slots.default);\n  },\n  computed: {\n    widgetParams() {\n      return {\n        indexName: this.indexName,\n        indexId: this.indexId,\n      };\n    },\n  },\n};\n","/* eslint-disable */\n\n// source: @babel/plugin-proposal-object-rest-spread@7.2.0\n// prettier-ignore\nexport function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n// source: @babel/plugin-proposal-object-rest-spread@7.2.0\n// prettier-ignore\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n","import { createSuitMixin } from '../mixins/suit';\nimport { version } from '../../package.json'; // rollup does pick only what needed from json\nimport { _objectSpread } from './polyfills';\nimport Vue from 'vue';\n\nexport const createInstantSearchComponent = component =>\n  _objectSpread(\n    {\n      mixins: [createSuitMixin({ name: 'InstantSearch' })],\n      provide() {\n        return {\n          $_ais_instantSearchInstance: this.instantSearchInstance,\n        };\n      },\n      watch: {\n        searchClient(searchClient) {\n          this.instantSearchInstance.helper.setClient(searchClient).search();\n        },\n        indexName(indexName) {\n          this.instantSearchInstance.helper.setIndex(indexName).search();\n        },\n        stalledSearchDelay(stalledSearchDelay) {\n          // private InstantSearch.js API:\n          this.instantSearchInstance._stalledSearchDelay = stalledSearchDelay;\n        },\n        routing() {\n          throw new Error(\n            'routing configuration can not be changed dynamically at this point.' +\n              '\\n\\n' +\n              'Please open a new issue: https://github.com/algolia/vue-instantsearch/issues/new?template=feature.md'\n          );\n        },\n        searchFunction(searchFunction) {\n          // private InstantSearch.js API:\n          this.instantSearchInstance._searchFunction = searchFunction;\n        },\n      },\n      created() {\n        const searchClient = this.instantSearchInstance.client;\n        if (typeof searchClient.addAlgoliaAgent === 'function') {\n          searchClient.addAlgoliaAgent(`Vue (${Vue.version})`);\n          searchClient.addAlgoliaAgent(`Vue InstantSearch (${version})`);\n        }\n      },\n      mounted() {\n        // from the documentation: https://vuejs.org/v2/api/#mounted\n        // \"Note that mounted does not guarantee that all child components have also been mounted. If you want to\n        // wait until the entire view has been rendered, you can use vm.$nextTick inside of mounted\"\n        this.$nextTick(() => {\n          if (!this.instantSearchInstance.started) {\n            this.instantSearchInstance.start();\n          }\n        });\n      },\n      beforeDestroy() {\n        if (this.instantSearchInstance.started) {\n          this.instantSearchInstance.dispose();\n        }\n\n        // a hydrated instance will no longer be hydrated once disposed, and starts from scratch\n        this.instantSearchInstance.hydrated = false;\n      },\n    },\n    component\n  );\n","import instantsearch from 'instantsearch.js/es';\nimport { createInstantSearchComponent } from '../util/createInstantSearchComponent';\nimport { warn } from '../util/warn';\n\nconst oldApiWarning = `Vue InstantSearch: You used the prop api-key or app-id.\nThese have been replaced by search-client.\n\nSee more info here: https://www.algolia.com/doc/api-reference/widgets/instantsearch/vue/#widget-param-search-client`;\n\nexport default createInstantSearchComponent({\n  name: 'AisInstantSearch',\n  props: {\n    searchClient: {\n      type: Object,\n      required: true,\n    },\n    insightsClient: {\n      type: Function,\n      required: false,\n    },\n    indexName: {\n      type: String,\n      required: true,\n    },\n    routing: {\n      default: null,\n      validator(value) {\n        if (\n          typeof value === 'boolean' ||\n          !value.router ||\n          !value.stateMapping\n        ) {\n          warn(\n            'routing should be an object, with `router` and `stateMapping`. See https://www.algolia.com/doc/api-reference/widgets/instantsearch/vue/#widget-param-routing'\n          );\n          return false;\n        }\n        return true;\n      },\n    },\n    stalledSearchDelay: {\n      type: Number,\n      default: 200,\n    },\n    searchFunction: {\n      type: Function,\n      default: null,\n    },\n\n    apiKey: {\n      type: String,\n      default: null,\n      validator(value) {\n        if (value) {\n          warn(oldApiWarning);\n        }\n        return false;\n      },\n    },\n    appId: {\n      type: String,\n      default: null,\n      validator(value) {\n        if (value) {\n          warn(oldApiWarning);\n        }\n        return false;\n      },\n    },\n  },\n  data() {\n    return {\n      instantSearchInstance: instantsearch({\n        searchClient: this.searchClient,\n        insightsClient: this.insightsClient,\n        indexName: this.indexName,\n        routing: this.routing,\n        stalledSearchDelay: this.stalledSearchDelay,\n        searchFunction: this.searchFunction,\n      }),\n    };\n  },\n  render(createElement) {\n    return createElement(\n      'div',\n      {\n        class: {\n          [this.suit()]: true,\n          [this.suit('', 'ssr')]: false,\n        },\n      },\n      this.$slots.default\n    );\n  },\n});\n","import { createInstantSearchComponent } from '../util/createInstantSearchComponent';\n\nexport default createInstantSearchComponent({\n  name: 'AisInstantSearchSsr',\n  inject: {\n    $_ais: {\n      default() {\n        throw new Error('`rootMixin` is required when using SSR.');\n      },\n    },\n  },\n  data() {\n    return {\n      instantSearchInstance: this.$_ais,\n    };\n  },\n  render(createElement) {\n    return createElement(\n      'div',\n      {\n        class: {\n          [this.suit()]: true,\n          [this.suit('', 'ssr')]: true,\n        },\n      },\n      this.$slots.default\n    );\n  },\n});\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n\n    <slot\n      v-if=\"showPrevious\"\n      name=\"loadPrevious\"\n      :refine-previous=\"refinePrevious\"\n      :page=\"state.results.page\"\n      :is-first-page=\"state.isFirstPage\"\n    >\n      <button\n        :class=\"[suit('loadPrevious'), state.isFirstPage && suit('loadPrevious', 'disabled')]\"\n        :disabled=\"state.isFirstPage\"\n        @click=\"refinePrevious()\"\n      >Show previous results</button>\n    </slot>\n\n    <slot\n      :items=\"items\"\n      :results=\"state.results\"\n      :is-last-page=\"state.isLastPage\"\n      :refine-previous=\"refinePrevious\"\n      :refine-next=\"refineNext\"\n      :refine=\"refineNext\"\n      :insights=\"state.insights\"\n    >\n      <ol :class=\"suit('list')\">\n        <li\n          v-for=\"(item, index) in items\"\n          :class=\"suit('item')\"\n          :key=\"item.objectID\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n            :index=\"index\"\n            :insights=\"state.insights\"\n          >objectID: {{ item.objectID }}, index: {{ index }}</slot>\n        </li>\n      </ol>\n\n      <slot\n        name=\"loadMore\"\n        :refine-next=\"refineNext\"\n        :refine=\"refineNext\"\n        :page=\"state.results.page\"\n        :is-last-page=\"state.isLastPage\"\n      >\n        <button\n          :class=\"[suit('loadMore'), state.isLastPage && suit('loadMore', 'disabled')]\"\n          :disabled=\"state.isLastPage\"\n          @click=\"refineNext()\"\n        >Show more results</button>\n      </slot>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectInfiniteHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisInfiniteHits',\n  mixins: [\n    createWidgetMixin({ connector: connectInfiniteHitsWithInsights }),\n    createSuitMixin({ name: 'InfiniteHits' }),\n  ],\n  props: {\n    showPrevious: {\n      type: Boolean,\n      default: false,\n    },\n    escapeHTML: {\n      type: Boolean,\n      default: true,\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        showPrevious: this.showPrevious,\n        escapeHTML: this.escapeHTML,\n        transformItems: this.transformItems,\n      };\n    },\n    items() {\n      // Fixes InstantSearch.js connectors API: every list\n      // of things must be called `items`\n      return this.state.hits;\n    },\n  },\n  methods: {\n    refinePrevious() {\n      this.state.showPrevious();\n    },\n    refineNext() {\n      this.state.showMore();\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !state.canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"state.canRefine\"\n      :can-toggle-show-more=\"state.canToggleShowMore\"\n      :is-showing-more=\"state.isShowingMore\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n      :toggle-show-more=\"state.toggleShowMore\"\n    >\n      <ul :class=\"suit('list')\">\n        <li\n          v-for=\"item in state.items\"\n          :key=\"item.value\"\n          :class=\"[suit('item'), item.isRefined && suit('item', 'selected')]\"\n        >\n          <a\n            :href=\"state.createURL(item.value)\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine(item.value)\"\n          >\n            <span :class=\"suit('label')\">{{ item.label }}</span>\n            <span :class=\"suit('count')\">{{ item.count }}</span>\n          </a>\n        </li>\n      </ul>\n\n      <button\n        v-if=\"showShowMoreButton\"\n        :class=\"[suit('showMore'), !state.canToggleShowMore && suit('showMore', 'disabled')]\"\n        :disabled=\"!state.canToggleShowMore\"\n        @click.prevent=\"state.toggleShowMore()\"\n      >\n        <slot\n          name=\"showMoreLabel\"\n          :is-showing-more=\"state.isShowingMore\"\n        >{{ state.isShowingMore ? 'Show less' : 'Show more' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisMenu',\n  mixins: [\n    createSuitMixin({ name: 'Menu' }),\n    createWidgetMixin({ connector: connectMenu }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.canRefine,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    // TODO: implement searchable in connector\n    // searchable: {\n    //   type: Boolean,\n    //   default: false,\n    // },\n    limit: {\n      type: Number,\n      default: 10,\n    },\n    showMoreLimit: {\n      type: Number,\n      default: 20,\n    },\n    showMore: {\n      type: Boolean,\n      default: false,\n    },\n    sortBy: {\n      type: [Array, Function],\n      default() {\n        return ['count:desc', 'name:asc'];\n      },\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        limit: this.limit,\n        showMore: this.showMore,\n        showMoreLimit: this.showMoreLimit,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems,\n      };\n    },\n    showShowMoreButton() {\n      return this.state.canRefine && this.showMore;\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    :class=\"[suit(), !state.canRefine && suit('', 'noRefinement')]\"\n    v-if=\"state\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"state.canRefine\"\n      :refine=\"refine\"\n      :createURL=\"state.createURL\"\n    >\n      <select\n        :class=\"suit('select')\"\n        @change=\"refine($event.currentTarget.value)\"\n      >\n        <option\n          :class=\"suit('option')\"\n          value=\"\"\n        >\n          <slot name=\"defaultOption\">See all</slot>\n        </option>\n        <option\n          v-for=\"item in state.items\"\n          :key=\"item.value\"\n          :class=\"suit('option')\"\n          :value=\"item.value\"\n          :selected=\"item.isRefined\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n          >{{ item.label }} ({{ item.count }})</slot>\n        </option>\n      </select>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisMenuSelect',\n  mixins: [\n    createSuitMixin({ name: 'MenuSelect' }),\n    createWidgetMixin({ connector: connectMenu }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.canRefine,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    limit: {\n      type: Number,\n      default: 10,\n    },\n    sortBy: {\n      type: [Array, Function],\n      default() {\n        return ['name:asc'];\n      },\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        limit: this.limit,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    refine(value) {\n      this.state.refine(value);\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :items=\"state.items\"\n      :can-refine=\"canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n    >\n      <ul :class=\"[suit('list')]\">\n        <li\n          v-for=\"item in state.items\"\n          :key=\"item.label\"\n          :class=\"[suit('item'), item.isRefined && suit('item', 'selected')]\"\n        >\n          <label :class=\"suit('label')\">\n            <input\n              type=\"radio\"\n              :class=\"suit('radio')\"\n              :name=\"attribute\"\n              :value=\"item.value\"\n              :checked=\"item.isRefined\"\n              @change=\"state.refine($event.target.value)\"\n            >\n            <span :class=\"suit('labelText')\">{{ item.label }}</span>\n          </label>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectNumericMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisNumericMenu',\n  mixins: [\n    createWidgetMixin({ connector: connectNumericMenu }),\n    createSuitMixin({ name: 'NumericMenu' }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => !state.hasNoResults,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    items: {\n      type: Array,\n      required: true,\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        transformItems: this.transformItems,\n        items: this.items,\n      };\n    },\n    canRefine() {\n      return !this.state.hasNoResults;\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :refine=\"refine\"\n      :createURL=\"state.createURL\"\n      :current-refinement=\"state.currentRefinement\"\n      :nb-hits=\"state.nbHits\"\n      :nb-pages=\"state.nbPages\"\n      :pages=\"state.pages\"\n      :is-first-page=\"state.isFirstPage\"\n      :is-last-page=\"state.isLastPage\"\n    >\n      <ul :class=\"suit('list')\">\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item', 'firstPage')]: true,\n            [suit('item', 'disabled')]: state.isFirstPage,\n          }\"\n          v-if=\"showFirst\"\n        >\n          <slot\n            name=\"first\"\n            :createURL=\"() => state.createURL(0)\"\n            :is-first-page=\"state.isFirstPage\"\n            :refine=\"() => refine(0)\"\n          >\n            <template v-if=\"!state.isFirstPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"First\"\n                :href=\"state.createURL(0)\"\n                @click.prevent=\"refine(0)\"\n              >‹‹</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"First\"\n              >‹‹</span>\n            </template>\n          </slot>\n        </li>\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item', 'previousPage')]: true,\n            [suit('item', 'disabled')]: state.isFirstPage,\n          }\"\n          v-if=\"showPrevious\"\n        >\n          <slot\n            name=\"previous\"\n            :createURL=\"() => state.createURL(state.currentRefinement - 1)\"\n            :is-first-page=\"state.isFirstPage\"\n            :refine=\"() => refine(state.currentRefinement - 1)\"\n          >\n            <template v-if=\"!state.isFirstPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"Previous\"\n                :href=\"state.createURL(state.currentRefinement - 1)\"\n                @click.prevent=\"refine(state.currentRefinement - 1)\"\n              >‹</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"Previous\"\n              >‹</span>\n            </template>\n          </slot>\n        </li>\n\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item', 'selected')]: state.currentRefinement === page\n          }\"\n          v-for=\"page in state.pages\"\n          :key=\"page\"\n        >\n          <slot\n            name=\"item\"\n            :page=\"page\"\n            :createURL=\"() => state.createURL(page)\"\n            :is-first-page=\"state.isFirstPage\"\n            :is-last-page=\"state.isLastPage\"\n            :refine=\"() => refine(page)\"\n          >\n            <a\n              :class=\"suit('link')\"\n              :href=\"state.createURL(page)\"\n              @click.prevent=\"refine(page)\"\n            >{{ page + 1 }}</a>\n          </slot>\n        </li>\n\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item','nextPage')]: true,\n            [suit('item','disabled')]: state.isLastPage\n          }\"\n          v-if=\"showNext\"\n        >\n          <slot\n            name=\"next\"\n            :createURL=\"() => state.createURL(state.currentRefinement + 1)\"\n            :is-last-page=\"state.isLastPage\"\n            :refine=\"() => refine(state.currentRefinement + 1)\"\n          >\n            <template v-if=\"!state.isLastPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"Next\"\n                :href=\"state.createURL(state.currentRefinement + 1)\"\n                @click.prevent=\"refine(state.currentRefinement + 1)\"\n              >›</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"Next\"\n              >›</span>\n            </template>\n          </slot>\n        </li>\n        <li\n          :class=\"{\n            [suit('item')]: true,\n            [suit('item','lastPage')]: true,\n            [suit('item','disabled')]: state.isLastPage,\n          }\"\n          v-if=\"showLast\"\n        >\n          <slot\n            name=\"last\"\n            :createURL=\"() => state.createURL(state.nbPages - 1)\"\n            :is-last-page=\"state.isLastPage\"\n            :refine=\"() => refine(state.nbPages - 1)\"\n          >\n            <template v-if=\"!state.isLastPage\">\n              <a\n                :class=\"suit('link')\"\n                aria-label=\"Last\"\n                :href=\"state.createURL(state.nbPages - 1)\"\n                @click.prevent=\"refine(state.nbPages - 1)\"\n              >››</a>\n            </template>\n            <template v-else>\n              <span\n                :class=\"suit('link')\"\n                aria-label=\"Last\"\n              >››</span>\n            </template>\n          </slot>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectPagination } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisPagination',\n  mixins: [\n    createSuitMixin({ name: 'Pagination' }),\n    createWidgetMixin({ connector: connectPagination }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.nbPages > 1,\n    }),\n  ],\n  props: {\n    padding: {\n      type: Number,\n      default: 3,\n      validator(value) {\n        return value > 0;\n      },\n    },\n    totalPages: {\n      type: Number,\n      default: undefined,\n      validator(value) {\n        return value > 0;\n      },\n    },\n    showFirst: {\n      type: Boolean,\n      default: true,\n    },\n    showLast: {\n      type: Boolean,\n      default: true,\n    },\n    showNext: {\n      type: Boolean,\n      default: true,\n    },\n    showPrevious: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        padding: this.padding,\n        totalPages: this.totalPages,\n      };\n    },\n  },\n  methods: {\n    refine(page) {\n      const p = Math.min(Math.max(page, 0), this.state.nbPages - 1);\n      this.state.refine(p);\n      // @TODO: do this in a general way\n      this.$emit('page-change', p);\n    },\n  },\n};\n</script>\n","<template>\n  <div :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\">\n    <div\n      v-if=\"$slots.header || $scopedSlots.header\"\n      :class=\"suit('header')\"\n    >\n      <slot\n        name=\"header\"\n        :has-refinements=\"canRefine\"\n      />\n    </div>\n    <div :class=\"suit('body')\">\n      <slot :has-refinements=\"canRefine\" />\n    </div>\n    <div\n      v-if=\"$slots.footer || $scopedSlots.footer\"\n      :class=\"suit('footer')\"\n    >\n      <slot\n        name=\"footer\"\n        :has-refinements=\"canRefine\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { createPanelProviderMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisPanel',\n  mixins: [createSuitMixin({ name: 'Panel' }), createPanelProviderMixin()],\n};\n</script>\n","<template>\n  <div :class=\"suit()\">\n    <a\n      :class=\"suit('link')\"\n      :href=\"algoliaUrl\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      aria-label=\"search by Algolia\"\n    >\n      <svg\n        style=\"height: 1.2em; width: auto\"\n        :class=\"[suit('logo'), suit('', theme)]\"\n        viewBox=\"0 0 168 24\"\n      >\n        <path\n          :fill=\"theme === 'dark' ? '#FFF': '#5D6494'\"\n          d=\"M6.97 6.68V8.3a4.47 4.47 0 0 0-2.42-.67 2.2 2.2 0 0 0-1.38.4c-.34.26-.5.6-.5 1.02 0 .43.16.77.49 1.03.33.25.83.53 1.51.83a7.04 7.04 0 0 1 1.9 1.08c.34.24.58.54.73.89.15.34.23.74.23 1.18 0 .95-.33 1.7-1 2.24a4 4 0 0 1-2.6.81 5.71 5.71 0 0 1-2.94-.68v-1.71c.84.63 1.81.94 2.92.94.58 0 1.05-.14 1.39-.4.34-.28.5-.65.5-1.13 0-.29-.1-.55-.3-.8a2.2 2.2 0 0 0-.65-.53 23.03 23.03 0 0 0-1.64-.78 13.67 13.67 0 0 1-1.11-.64c-.12-.1-.28-.22-.46-.4a1.72 1.72 0 0 1-.39-.5 4.46 4.46 0 0 1-.22-.6c-.07-.23-.1-.48-.1-.75 0-.91.33-1.63 1-2.17a4 4 0 0 1 2.57-.8c.97 0 1.8.18 2.47.52zm7.47 5.7v-.3a2.26 2.26 0 0 0-.5-1.44c-.3-.35-.74-.53-1.32-.53-.53 0-.99.2-1.37.58-.38.39-.62.95-.72 1.68h3.91zm1 2.79v1.4c-.6.34-1.38.51-2.36.51a4.02 4.02 0 0 1-3-1.13 4.04 4.04 0 0 1-1.11-2.97c0-1.3.34-2.32 1.02-3.06a3.38 3.38 0 0 1 2.6-1.1c1.03 0 1.85.32 2.46.96.6.64.9 1.57.9 2.78 0 .33-.03.68-.09 1.04h-5.31c.1.7.4 1.24.89 1.61.49.38 1.1.56 1.85.56.86 0 1.58-.2 2.15-.6zm6.61-1.78h-1.21c-.6 0-1.05.12-1.35.36-.3.23-.46.53-.46.89 0 .37.12.66.36.88.23.2.57.32 1.02.32.5 0 .9-.15 1.2-.43.3-.28.44-.65.44-1.1v-.92zm-4.07-2.55V9.33a4.96 4.96 0 0 1 2.5-.55c2.1 0 3.17 1.03 3.17 3.08V17H22.1v-.96c-.42.68-1.15 1.02-2.19 1.02-.76 0-1.38-.22-1.84-.66-.46-.44-.7-1-.7-1.68 0-.78.3-1.38.88-1.81.59-.43 1.4-.65 2.46-.65h1.34v-.46c0-.55-.13-.97-.4-1.25-.26-.29-.7-.43-1.32-.43-.86 0-1.65.24-2.35.72zm9.34-1.93v1.42c.39-1 1.1-1.5 2.12-1.5.15 0 .31.02.5.05v1.53c-.23-.1-.48-.14-.76-.14-.54 0-.99.24-1.34.71a2.8 2.8 0 0 0-.52 1.71V17h-1.57V8.91h1.57zm5 4.09a3 3 0 0 0 .76 2.01c.47.53 1.14.8 2 .8.64 0 1.24-.18 1.8-.53v1.4c-.53.32-1.2.48-2 .48a3.98 3.98 0 0 1-4.17-4.18c0-1.16.38-2.15 1.14-2.98a4 4 0 0 1 3.1-1.23c.7 0 1.34.15 1.92.44v1.44a3.24 3.24 0 0 0-1.77-.5A2.65 2.65 0 0 0 32.33 13zm7.92-7.28v4.58c.46-1 1.3-1.5 2.5-1.5.8 0 1.42.24 1.9.73.48.5.72 1.17.72 2.05V17H43.8v-5.1c0-.56-.14-.99-.43-1.29-.28-.3-.65-.45-1.1-.45-.54 0-1 .2-1.42.6-.4.4-.61 1.02-.61 1.85V17h-1.56V5.72h1.56zM55.2 15.74c.6 0 1.1-.25 1.5-.76.4-.5.6-1.16.6-1.95 0-.92-.2-1.62-.6-2.12-.4-.5-.92-.74-1.55-.74-.56 0-1.05.22-1.5.67-.44.45-.66 1.13-.66 2.06 0 .96.22 1.67.64 2.14.43.47.95.7 1.57.7zM53 5.72v4.42a2.74 2.74 0 0 1 2.43-1.34c1.03 0 1.86.38 2.51 1.15.65.76.97 1.78.97 3.05 0 1.13-.3 2.1-.92 2.9-.62.81-1.47 1.21-2.54 1.21s-1.9-.45-2.46-1.34V17h-1.58V5.72H53zm9.9 11.1l-3.22-7.9h1.74l1 2.62 1.26 3.42c.1-.32.48-1.46 1.15-3.42l.91-2.63h1.66l-2.92 7.87c-.78 2.07-1.96 3.1-3.56 3.1-.28 0-.53-.02-.73-.07v-1.34c.17.04.35.06.54.06 1.03 0 1.76-.57 2.17-1.7z\"\n        />\n        <path\n          fill=\"#5468FF\"\n          d=\"M78.99.94h16.6a2.97 2.97 0 0 1 2.96 2.96v16.6a2.97 2.97 0 0 1-2.97 2.96h-16.6a2.97 2.97 0 0 1-2.96-2.96V3.9A2.96 2.96 0 0 1 79 .94\"\n        />\n        <path\n          fill=\"#FFF\"\n          d=\"M89.63 5.97v-.78a.98.98 0 0 0-.98-.97h-2.28a.98.98 0 0 0-.97.97V6c0 .09.08.15.17.13a7.13 7.13 0 0 1 3.9-.02c.08.02.16-.04.16-.13m-6.25 1L83 6.6a.98.98 0 0 0-1.38 0l-.46.46a.97.97 0 0 0 0 1.38l.38.39c.06.06.15.04.2-.02a7.49 7.49 0 0 1 1.63-1.62c.07-.04.08-.14.02-.2m4.16 2.45v3.34c0 .1.1.17.2.12l2.97-1.54c.06-.03.08-.12.05-.18a3.7 3.7 0 0 0-3.08-1.87c-.07 0-.14.06-.14.13m0 8.05a4.49 4.49 0 1 1 0-8.98 4.49 4.49 0 0 1 0 8.98m0-10.85a6.37 6.37 0 1 0 0 12.74 6.37 6.37 0 0 0 0-12.74\"\n        />\n        <path\n          :fill=\"theme === 'dark' ? '#FFF': '#5468FF'\"\n          d=\"M120.92 18.8c-4.38.02-4.38-3.54-4.38-4.1V1.36l2.67-.42v13.25c0 .32 0 2.36 1.71 2.37v2.24zm-10.84-2.18c.82 0 1.43-.04 1.85-.12v-2.72a5.48 5.48 0 0 0-1.57-.2c-.3 0-.6.02-.9.07-.3.04-.57.12-.81.24-.24.11-.44.28-.58.49a.93.93 0 0 0-.22.65c0 .63.22 1 .61 1.23.4.24.94.36 1.62.36zm-.23-9.7c.88 0 1.62.11 2.23.33.6.22 1.09.53 1.44.92.36.4.61.92.76 1.48.16.56.23 1.17.23 1.85v6.87c-.4.1-1.03.2-1.86.32-.84.12-1.78.18-2.82.18-.69 0-1.32-.07-1.9-.2a4 4 0 0 1-1.46-.63c-.4-.3-.72-.67-.96-1.13a4.3 4.3 0 0 1-.34-1.8c0-.66.13-1.08.39-1.53.26-.45.6-.82 1.04-1.1.45-.3.95-.5 1.54-.62a8.8 8.8 0 0 1 3.79.05v-.44c0-.3-.04-.6-.11-.87a1.78 1.78 0 0 0-1.1-1.22c-.31-.12-.7-.2-1.15-.2a9.75 9.75 0 0 0-2.95.46l-.33-2.19c.34-.12.84-.23 1.48-.35.65-.12 1.34-.18 2.08-.18zm52.84 9.63c.82 0 1.43-.05 1.85-.13V13.7a5.42 5.42 0 0 0-1.57-.2c-.3 0-.6.02-.9.07-.3.04-.57.12-.81.24-.24.12-.44.28-.58.5a.93.93 0 0 0-.22.65c0 .63.22.99.61 1.23.4.24.94.36 1.62.36zm-.23-9.7c.88 0 1.63.11 2.23.33.6.22 1.1.53 1.45.92.35.39.6.92.76 1.48.15.56.23 1.18.23 1.85v6.88c-.41.08-1.03.19-1.87.31-.83.12-1.77.18-2.81.18-.7 0-1.33-.06-1.9-.2a4 4 0 0 1-1.47-.63c-.4-.3-.72-.67-.95-1.13a4.3 4.3 0 0 1-.34-1.8c0-.66.13-1.08.38-1.53.26-.45.61-.82 1.05-1.1.44-.3.95-.5 1.53-.62a8.8 8.8 0 0 1 3.8.05v-.43c0-.31-.04-.6-.12-.88-.07-.28-.2-.52-.38-.73a1.78 1.78 0 0 0-.73-.5c-.3-.1-.68-.2-1.14-.2a9.85 9.85 0 0 0-2.95.47l-.32-2.19a11.63 11.63 0 0 1 3.55-.53zm-8.03-1.27a1.62 1.62 0 0 0 0-3.24 1.62 1.62 0 1 0 0 3.24zm1.35 13.22h-2.7V7.27l2.7-.42V18.8zm-4.72 0c-4.38.02-4.38-3.54-4.38-4.1l-.01-13.34 2.67-.42v13.25c0 .32 0 2.36 1.72 2.37v2.24zm-8.7-5.9a4.7 4.7 0 0 0-.74-2.79 2.4 2.4 0 0 0-2.07-1 2.4 2.4 0 0 0-2.06 1 4.7 4.7 0 0 0-.74 2.8c0 1.16.25 1.94.74 2.62a2.4 2.4 0 0 0 2.07 1.02c.88 0 1.57-.34 2.07-1.02.49-.68.73-1.46.73-2.63zm2.74 0a6.46 6.46 0 0 1-1.52 4.23c-.49.53-1.07.94-1.76 1.22-.68.29-1.73.45-2.26.45-.53 0-1.58-.15-2.25-.45a5.1 5.1 0 0 1-2.88-3.13 7.3 7.3 0 0 1-.01-4.84 5.13 5.13 0 0 1 2.9-3.1 5.67 5.67 0 0 1 2.22-.42c.81 0 1.56.14 2.24.42.69.29 1.28.69 1.75 1.22.49.52.87 1.15 1.14 1.89a7 7 0 0 1 .43 2.5zm-20.14 0c0 1.11.25 2.36.74 2.88.5.52 1.13.78 1.91.78a4.07 4.07 0 0 0 2.12-.6V9.33c-.19-.04-.99-.2-1.76-.23a2.67 2.67 0 0 0-2.23 1 4.73 4.73 0 0 0-.78 2.8zm7.44 5.27c0 1.82-.46 3.16-1.4 4-.94.85-2.37 1.27-4.3 1.27-.7 0-2.17-.13-3.34-.4l.43-2.11c.98.2 2.27.26 2.95.26 1.08 0 1.84-.22 2.3-.66.46-.43.68-1.08.68-1.94v-.44a5.2 5.2 0 0 1-2.54.6 5.6 5.6 0 0 1-2.01-.36 4.2 4.2 0 0 1-2.58-2.71 9.88 9.88 0 0 1 .02-5.35 4.92 4.92 0 0 1 2.93-2.96 6.6 6.6 0 0 1 2.43-.46 19.64 19.64 0 0 1 4.43.66v10.6z\"\n        />\n      </svg>\n    </a>\n  </div>\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisPoweredBy',\n  mixins: [createSuitMixin({ name: 'PoweredBy' })],\n  props: {\n    theme: {\n      default: 'light',\n      validator(value) {\n        return ['light', 'dark'].indexOf(value) !== -1;\n      },\n    },\n  },\n  computed: {\n    algoliaUrl() {\n      return (\n        'https://www.algolia.com/?' +\n        'utm_source=vue-instantsearch&' +\n        'utm_medium=website&' +\n        `utm_content=${location ? location.hostname : ''}&` +\n        'utm_campaign=poweredby'\n      );\n    },\n  },\n};\n</script>\n","import { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectQueryRules } from 'instantsearch.js/es/connectors';\n\nexport default {\n  name: 'AisQueryRuleContext',\n  mixins: [\n    createSuitMixin({ name: 'QueryRuleContext' }),\n    createWidgetMixin({\n      connector: connectQueryRules,\n    }),\n  ],\n  props: {\n    trackedFilters: {\n      type: Object,\n      required: true,\n    },\n    transformRuleContexts: {\n      type: Function,\n      required: false,\n      default: ruleContexts => ruleContexts,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        trackedFilters: this.trackedFilters,\n        transformRuleContexts: this.transformRuleContexts,\n      };\n    },\n  },\n  render() {\n    return null;\n  },\n};\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot :items=\"state.items\">\n      <div\n        v-for=\"(item, key) in state.items\"\n        :key=\"key\"\n      >\n        <slot\n          name=\"item\"\n          :item=\"item\"\n        >\n          <pre>{{ item }}</pre>\n        </slot>\n      </div>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectQueryRules } from 'instantsearch.js/es/connectors';\n\nexport default {\n  name: 'AisQueryRuleCustomData',\n  mixins: [\n    createSuitMixin({ name: 'QueryRuleCustomData' }),\n    createWidgetMixin({\n      connector: connectQueryRules,\n    }),\n  ],\n  props: {\n    transformItems: {\n      type: Function,\n      required: false,\n      default: items => items,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        transformItems: this.transformItems,\n      };\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :current-refinement=\"values\"\n      :refine=\"refine\"\n      :can-refine=\"canRefine\"\n      :range=\"state.range\"\n    >\n      <form\n        :class=\"suit('form')\"\n        @submit.prevent=\"refine({ min: minInput, max: maxInput })\"\n      >\n        <label :class=\"suit('label')\">\n          <slot name=\"minLabel\" />\n          <input\n            type=\"number\"\n            :class=\"[suit('input'), suit('input', 'min')]\"\n            :step=\"step\"\n            :min=\"state.range.min\"\n            :max=\"state.range.max\"\n            :placeholder=\"state.range.min\"\n            :value=\"values.min\"\n            @change=\"minInput = $event.currentTarget.value\"\n          >\n        </label>\n        <span :class=\"suit('separator')\">\n          <slot name=\"separator\">to</slot>\n        </span>\n        <label :class=\"suit('label')\">\n          <slot name=\"maxLabel\" />\n          <input\n            :class=\"[suit('input'), suit('input', 'max')]\"\n            type=\"number\"\n            :step=\"step\"\n            :min=\"state.range.min\"\n            :max=\"state.range.max\"\n            :placeholder=\"state.range.max\"\n            :value=\"values.max\"\n            @change=\"maxInput = $event.currentTarget.value\"\n          >\n        </label>\n        <button\n          :class=\"suit('submit')\"\n          type=\"submit\"\n        >\n          <slot name=\"submitLabel\">Go</slot>\n        </button>\n      </form>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectRange } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\n\nconst mapStateToCanRefine = state =>\n  state && state.range && state.range.min !== state.range.max;\n\nexport default {\n  name: 'AisRangeInput',\n  mixins: [\n    createSuitMixin({ name: 'RangeInput' }),\n    createWidgetMixin({ connector: connectRange }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    min: {\n      type: Number,\n      required: false,\n      default: -Infinity,\n    },\n    max: {\n      type: Number,\n      required: false,\n      default: Infinity,\n    },\n    precision: {\n      type: Number,\n      required: false,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      minInput: undefined,\n      maxInput: undefined,\n    };\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        min: this.min,\n        max: this.max,\n        precision: this.precision,\n      };\n    },\n    canRefine() {\n      return mapStateToCanRefine(this.state);\n    },\n    step() {\n      return 1 / Math.pow(10, this.precision);\n    },\n    values() {\n      const [minValue, maxValue] = this.state.start;\n      const { min: minRange, max: maxRange } = this.state.range;\n\n      return {\n        min: minValue !== -Infinity && minValue !== minRange ? minValue : null,\n        max: maxValue !== Infinity && maxValue !== maxRange ? maxValue : null,\n      };\n    },\n  },\n  methods: {\n    refine({ min, max }) {\n      this.state.refine([min, max]);\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :items=\"state.items\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        style=\"display: none;\"\n      >\n        <symbol\n          id=\"ais-RatingMenu-starSymbol\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\" />\n        </symbol>\n        <symbol\n          id=\"ais-RatingMenu-starEmptySymbol\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\" />\n        </symbol>\n      </svg>\n\n      <ul :class=\"suit('list')\">\n        <li\n          v-for=\"(item, key) in state.items\"\n          :key=\"key\"\n          :class=\"[suit('item'), item.isRefined && suit('item', 'selected')]\"\n        >\n          <a\n            :href=\"state.createURL(item)\"\n            :aria-label=\"`${item.value} & Up`\"\n            :class=\"suit('link')\"\n            @click.prevent=\"state.refine(item.value)\"\n          >\n            <template v-for=\"(full, n) in item.stars\">\n              <svg\n                v-if=\"full\"\n                aria-hidden=\"true\"\n                width=\"24\"\n                height=\"24\"\n                :class=\"[suit('starIcon'), suit('starIcon--full')]\"\n                :key=\"n\"\n              >\n                <use xlink:href=\"#ais-RatingMenu-starSymbol\" />\n              </svg>\n\n              <svg\n                v-else\n                :class=\"[suit('starIcon'), suit('starIcon--empty')]\"\n                aria-hidden=\"true\"\n                width=\"24\"\n                height=\"24\"\n                :key=\"n\"\n              >\n                <use xlink:href=\"#ais-RatingMenu-starEmptySymbol\" />\n              </svg>\n            </template>\n\n            <span\n              :class=\"suit('label')\"\n              aria-hidden=\"true\"\n            >\n              <slot name=\"andUp\">&amp; Up</slot>\n            </span>\n            <span :class=\"suit('count')\">{{ item.count }}</span>\n          </a>\n        </li>\n      </ul>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectRatingMenu } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisRatingMenu',\n  mixins: [\n    createSuitMixin({ name: 'RatingMenu' }),\n    createWidgetMixin({ connector: connectRatingMenu }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => !state.hasNoResults,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    max: {\n      type: Number,\n      default: 5,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        max: this.max,\n      };\n    },\n  },\n};\n</script>\n","<template>\n  <form\n    action=\"\"\n    role=\"search\"\n    novalidate\n    :class=\"suit('form')\"\n    @submit.prevent=\"onFormSubmit\"\n    @reset.prevent=\"onFormReset\"\n  >\n    <!-- :value/@input allows us to pass v-model to the component -->\n    <input\n      type=\"search\"\n      autocorrect=\"off\"\n      autocapitalize=\"off\"\n      autocomplete=\"off\"\n      spellcheck=\"false\"\n      required\n      maxlength=\"512\"\n      aria-label=\"Search\"\n      :placeholder=\"placeholder\"\n      :autofocus=\"autofocus\"\n      :class=\"suit('input')\"\n      :value=\"value\"\n      @focus=\"$emit('focus', $event)\"\n      @blur=\"$emit('blur', $event)\"\n      @input=\"$emit('input', $event.target.value)\"\n      ref=\"input\"\n    >\n    <button\n      type=\"submit\"\n      :title=\"submitTitle\"\n      :class=\"suit('submit')\"\n      :hidden=\"showLoadingIndicator && shouldShowLoadingIndicator\"\n    >\n      <slot name=\"submit-icon\">\n        <svg\n          role=\"img\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"10\"\n          height=\"10\"\n          viewBox=\"0 0 40 40\"\n          :class=\"suit('submitIcon')\"\n        >\n          <path\n            d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"\n            fillRule=\"evenodd\"\n          />\n        </svg>\n      </slot>\n    </button>\n\n    <button\n      type=\"reset\"\n      :title=\"resetTitle\"\n      :class=\"suit('reset')\"\n      :hidden=\"!value || (showLoadingIndicator && shouldShowLoadingIndicator)\"\n    >\n      <slot name=\"reset-icon\">\n        <svg\n          role=\"img\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"1em\"\n          height=\"1em\"\n          viewBox=\"0 0 20 20\"\n          :class=\"suit('resetIcon')\"\n        >\n          <path\n            d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"\n            fillRule=\"evenodd\"\n          />\n        </svg>\n      </slot>\n    </button>\n\n    <span\n      v-if=\"showLoadingIndicator\"\n      :hidden=\"!shouldShowLoadingIndicator\"\n      :class=\"suit('loadingIndicator')\"\n    >\n      <slot name=\"loading-indicator\">\n        <svg\n          role=\"img\"\n          aria-label=\"Results are loading\"\n          width=\"16\"\n          height=\"16\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          stroke=\"#444\"\n          viewBox=\"0 0 38 38\"\n          :class=\"suit('loadingIcon')\"\n        >\n          <g\n            fill=\"none\"\n            fill-rule=\"evenodd\"\n          >\n            <g\n              transform=\"translate(1 1)\"\n              stroke-width=\"2\"\n            >\n              <circle\n                stroke-opacity=\".5\"\n                cx=\"18\"\n                cy=\"18\"\n                r=\"18\"\n              />\n              <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n                <animateTransform\n                  attributeName=\"transform\"\n                  type=\"rotate\"\n                  from=\"0 18 18\"\n                  to=\"360 18 18\"\n                  dur=\"1s\"\n                  repeatCount=\"indefinite\"\n                />\n              </path>\n            </g>\n          </g>\n        </svg>\n      </slot>\n    </span>\n  </form>\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'SearchInput',\n  mixins: [createSuitMixin({ name: 'SearchBox' })],\n  props: {\n    placeholder: {\n      type: String,\n      default: 'Search here…',\n    },\n    autofocus: {\n      type: Boolean,\n      default: false,\n    },\n    showLoadingIndicator: {\n      type: Boolean,\n      default: false,\n    },\n    shouldShowLoadingIndicator: {\n      type: Boolean,\n      default: false,\n    },\n    submitTitle: {\n      type: String,\n      default: 'Search',\n    },\n    resetTitle: {\n      type: String,\n      default: 'Clear',\n    },\n    value: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      query: '',\n    };\n  },\n  methods: {\n    onFormSubmit() {\n      const input = this.$refs.input;\n      input.blur();\n    },\n    onFormReset() {\n      this.$emit('input', '');\n      this.$emit('reset');\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    :class=\"[\n      suit(),\n      !state.canRefine && suit('','noRefinement')\n    ]\"\n    v-if=\"state\"\n  >\n    <slot\n      :items=\"items\"\n      :refine=\"refine\"\n      :search-for-items=\"state.searchForItems\"\n      :search-for-items-query=\"searchForFacetValuesQuery\"\n      :toggle-show-more=\"toggleShowMore\"\n      :can-toggle-show-more=\"state.canToggleShowMore\"\n      :is-showing-more=\"state.isShowingMore\"\n      :createURL=\"state.createURL\"\n      :is-from-search=\"state.isFromSearch\"\n      :can-refine=\"state.canRefine\"\n    >\n      <div\n        :class=\"suit('searchBox')\"\n        v-if=\"searchable\"\n      >\n        <search-input\n          v-model=\"searchForFacetValues\"\n          :placeholder=\"searchablePlaceholder\"\n          :class-names=\"classNames\"\n        />\n      </div>\n      <slot\n        name=\"noResults\"\n        :query=\"searchForFacetValues\"\n        v-if=\"state.isFromSearch && items.length === 0\"\n      >\n        <div :class=\"suit('noResults')\">No results.</div>\n      </slot>\n      <ul :class=\"suit('list')\">\n        <li\n          :class=\"[\n          suit('item'), item.isRefined && suit('item', 'selected')]\"\n          v-for=\"item in items\"\n          :key=\"item.value\"\n        >\n          <slot\n            name=\"item\"\n            :item=\"item\"\n            :refine=\"refine\"\n            :createURL=\"state.createURL\"\n          >\n            <label :class=\"suit('label')\">\n              <input\n                :class=\"suit('checkbox')\"\n                type=\"checkbox\"\n                :value=\"item.value\"\n                :checked=\"item.isRefined\"\n                @change=\"refine(item.value)\"\n              >\n              <span\n                v-if=\"searchable\"\n                :class=\"suit('labelText')\"\n              >\n                <ais-highlight\n                  attribute=\"item\"\n                  :hit=\"item\"\n                />\n              </span>\n              <span\n                v-else\n                :class=\"suit('labelText')\"\n              >{{ item.label }}</span>\n              <span :class=\"suit('count')\">{{ item.count }}</span>\n            </label>\n          </slot>\n        </li>\n      </ul>\n      <button\n        :class=\"[\n          suit('showMore'),\n          {\n            [suit('showMore', 'disabled')]: !state.canToggleShowMore,\n          }\n        ]\"\n        @click=\"toggleShowMore\"\n        v-if=\"showMore\"\n        :disabled=\"!state.canToggleShowMore\"\n      >\n        <slot\n          name=\"showMoreLabel\"\n          :is-showing-more=\"state.isShowingMore\"\n        >Show {{ state.isShowingMore ? 'less' : 'more' }}</slot>\n      </button>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { connectRefinementList } from 'instantsearch.js/es/connectors';\nimport SearchInput from './SearchInput.vue';\nimport AisHighlight from './Highlight.vue';\n\nconst noop = () => {};\n\nexport default {\n  name: 'AisRefinementList',\n  components: { SearchInput, AisHighlight },\n  mixins: [\n    createSuitMixin({ name: 'RefinementList' }),\n    createWidgetMixin({ connector: connectRefinementList }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => state.canRefine,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    searchable: {\n      type: Boolean,\n      default: false,\n    },\n    searchablePlaceholder: {\n      default: 'Search here…',\n      type: String,\n      required: false,\n    },\n    operator: {\n      default: 'or',\n      validator(value) {\n        return value === 'and' || value === 'or';\n      },\n      required: false,\n    },\n    limit: {\n      type: Number,\n      default: 10,\n      required: false,\n    },\n    showMoreLimit: {\n      type: Number,\n      default: 20,\n      required: false,\n    },\n    showMore: {\n      type: Boolean,\n      default: false,\n      required: false,\n    },\n    sortBy: {\n      type: [Array, Function],\n      default: () => ['isRefined', 'count:desc', 'name:asc'],\n      required: false,\n    },\n    transformItems: {\n      type: Function,\n      default: items => items,\n      required: false,\n    },\n  },\n  data() {\n    return {\n      searchForFacetValuesQuery: '',\n    };\n  },\n  computed: {\n    searchForFacetValues: {\n      get() {\n        return this.searchForFacetValuesQuery;\n      },\n      set(value) {\n        this.state.searchForItems(value);\n        this.searchForFacetValuesQuery = value;\n      },\n    },\n    toggleShowMore() {\n      return this.state.toggleShowMore || noop;\n    },\n    items() {\n      return this.state.items.map(item =>\n        Object.assign({}, item, {\n          _highlightResult: {\n            item: {\n              value: item.highlighted,\n            },\n          },\n        })\n      );\n    },\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        operator: this.operator,\n        limit: this.limit,\n        showMore: this.showMore,\n        showMoreLimit: this.showMoreLimit,\n        sortBy: this.sortBy,\n        escapeFacetValues: true,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n  methods: {\n    refine(value) {\n      this.state.refine(value);\n      this.searchForFacetValuesQuery = '';\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    :class=\"suit()\"\n    v-if=\"state && state.state && state.results\"\n  >\n    <slot v-bind=\"stateResults\">\n      <p>\n        Use this component to have a different layout based on a certain state.\n      </p>\n      <p>\n        Fill in the slot, and get access to the following things on the\n        <code>slot-scope</code>:\n      </p>\n      <pre>results: {{ Object.keys(state.results) }}</pre>\n      <pre>state: {{ Object.keys(state.state) }}</pre>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { _objectSpread } from '../util/polyfills';\nimport connectStateResults from '../connectors/connectStateResults';\n\nexport default {\n  name: 'AisStateResults',\n  mixins: [\n    createWidgetMixin({ connector: connectStateResults }),\n    createSuitMixin({ name: 'StateResults' }),\n  ],\n  computed: {\n    stateResults() {\n      // @MAJOR: replace v-bind=\"stateResults\" with :state=\"state.state\" :results=\"state.results\"\n      const { state, results } = this.state;\n      return _objectSpread({}, results, { results, state });\n    },\n  },\n};\n</script>\n","import { _objectSpread } from '../util/polyfills';\n\nconst connectStateResults = (renderFn, unmountFn = () => {}) => (\n  widgetParams = {}\n) => ({\n  init({ instantSearchInstance }) {\n    renderFn(\n      {\n        state: undefined,\n        results: undefined,\n        instantSearchInstance,\n        widgetParams,\n      },\n      true\n    );\n  },\n\n  render({ results, instantSearchInstance, state }) {\n    const resultsCopy = _objectSpread({}, results);\n\n    const stateCopy = _objectSpread({}, state);\n\n    renderFn(\n      {\n        results: resultsCopy,\n        state: stateCopy,\n        instantSearchInstance,\n        widgetParams,\n      },\n      false\n    );\n  },\n\n  dispose() {\n    unmountFn();\n  },\n});\n\nexport default connectStateResults;\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      :current-refinement=\"currentRefinement\"\n      :is-search-stalled=\"state.isSearchStalled\"\n      :refine=\"state.refine\"\n    >\n      <search-input\n        @focus=\"$emit('focus', $event)\"\n        @blur=\"$emit('blur', $event)\"\n        @reset=\"$emit('reset')\"\n        :placeholder=\"placeholder\"\n        :autofocus=\"autofocus\"\n        :show-loading-indicator=\"showLoadingIndicator\"\n        :should-show-loading-indicator=\"state.isSearchStalled\"\n        :submit-title=\"submitTitle\"\n        :reset-title=\"resetTitle\"\n        :class-names=\"classNames\"\n        v-model=\"currentRefinement\"\n      >\n        <slot\n          name=\"loading-indicator\"\n          slot=\"loading-indicator\"\n        />\n        <slot\n          name=\"submit-icon\"\n          slot=\"submit-icon\"\n        />\n        <slot\n          name=\"reset-icon\"\n          slot=\"reset-icon\"\n        />\n      </search-input>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectSearchBox } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\nimport SearchInput from './SearchInput.vue';\n\nexport default {\n  name: 'AisSearchBox',\n  mixins: [\n    createWidgetMixin({ connector: connectSearchBox }),\n    createSuitMixin({ name: 'SearchBox' }),\n  ],\n  components: {\n    SearchInput,\n  },\n  props: {\n    placeholder: {\n      type: String,\n      default: 'Search here…',\n    },\n    autofocus: {\n      type: Boolean,\n      default: false,\n    },\n    showLoadingIndicator: {\n      type: Boolean,\n      default: false,\n    },\n    submitTitle: {\n      type: String,\n      default: 'Search',\n    },\n    resetTitle: {\n      type: String,\n      default: 'Clear',\n    },\n    value: {\n      type: String,\n      default: undefined,\n    },\n  },\n  data() {\n    return {\n      localValue: '',\n    };\n  },\n  methods: {\n    onFormSubmit() {\n      const input = this.$el.querySelector('input[type=search]');\n      input.blur();\n    },\n    onFormReset() {\n      this.state.refine('');\n    },\n  },\n  computed: {\n    isControlled() {\n      return typeof this.value !== 'undefined';\n    },\n    currentRefinement: {\n      get() {\n        // if the input is controlled, but not up to date\n        // this means it didn't search, and we should pretend it was `set`\n        if (this.isControlled && this.value !== this.localValue) {\n          // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n          this.localValue = this.value;\n          this.$emit('input', this.value);\n          this.state.refine(this.value);\n        }\n        return this.value || this.state.query || '';\n      },\n      set(val) {\n        this.localValue = val;\n        this.state.refine(val);\n        if (this.isControlled) {\n          this.$emit('input', val);\n        }\n      },\n    },\n  },\n};\n</script>\n","<template>\n  <span\n    :class=\"suit()\"\n    v-html=\"innerHTML\"\n  />\n</template>\n\n<script>\nimport instantsearch from 'instantsearch.js/es';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisSnippet',\n  mixins: [createSuitMixin({ name: 'Snippet' })],\n  props: {\n    hit: {\n      type: Object,\n      required: true,\n    },\n    attribute: {\n      type: String,\n      required: true,\n    },\n    highlightedTagName: {\n      type: String,\n      default: 'mark',\n    },\n  },\n  computed: {\n    innerHTML() {\n      return instantsearch.snippet({\n        attribute: this.attribute,\n        hit: this.hit,\n        highlightedTagName: this.highlightedTagName,\n      });\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    :class=\"suit()\"\n    v-if=\"state\"\n  >\n    <slot\n      :items=\"state.options\"\n      :has-no-results=\"state.hasNoResults\"\n      :refine=\"state.refine\"\n      :current-refinement=\"state.currentRefinement\"\n    >\n      <select\n        :class=\"suit('select')\"\n        @change=\"state.refine($event.currentTarget.value)\"\n      >\n        <option\n          v-for=\"item in state.options\"\n          :key=\"item.value\"\n          :class=\"suit('option')\"\n          :value=\"item.value\"\n          :selected=\"item.value === state.currentRefinement\"\n        >{{ item.label }}</option>\n      </select>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectSortBy } from 'instantsearch.js/es/connectors';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\n\nexport default {\n  name: 'AisSortBy',\n  mixins: [\n    createSuitMixin({ name: 'SortBy' }),\n    createWidgetMixin({ connector: connectSortBy }),\n\n    createPanelConsumerMixin({\n      mapStateToCanRefine: state => !state.hasNoResults,\n    }),\n  ],\n  props: {\n    items: {\n      type: Array,\n      required: true,\n    },\n    transformItems: {\n      type: Function,\n      default(items) {\n        return items;\n      },\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        items: this.items,\n        transformItems: this.transformItems,\n      };\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot\n      v-bind=\"state\"\n      :results=\"state.instantSearchInstance.helper.lastResults\"\n    >\n      <span :class=\"suit('text')\">{{ state.nbHits.toLocaleString() }} results found in {{ state.processingTimeMS.toLocaleString() }}ms</span>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { createWidgetMixin } from '../mixins/widget';\nimport { connectStats } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\n\nexport default {\n  name: 'AisStats',\n  mixins: [\n    createWidgetMixin({ connector: connectStats }),\n    createSuitMixin({ name: 'Stats' }),\n  ],\n  computed: {\n    widgetParams() {\n      return {};\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"[suit(), !canRefine && suit('', 'noRefinement')]\"\n  >\n    <slot\n      :value=\"state.value\"\n      :can-refine=\"canRefine\"\n      :refine=\"state.refine\"\n      :createURL=\"state.createURL\"\n    >\n      <label :class=\"suit('label')\">\n        <input\n          :class=\"suit('checkbox')\"\n          type=\"checkbox\"\n          :name=\"state.value.name\"\n          :value=\"on\"\n          :checked=\"state.value.isRefined\"\n          @change=\"state.refine(state.value)\"\n        >\n        <span :class=\"suit('labelText')\">{{ label }}</span>\n        <span\n          v-if=\"state.value.count !== null\"\n          :class=\"suit('count')\"\n        >{{ state.value.count.toLocaleString() }}</span>\n      </label>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectToggleRefinement } from 'instantsearch.js/es/connectors';\nimport { createWidgetMixin } from '../mixins/widget';\nimport { createPanelConsumerMixin } from '../mixins/panel';\nimport { createSuitMixin } from '../mixins/suit';\n\nconst mapStateToCanRefine = state => Boolean(state.value.count);\n\nexport default {\n  name: 'AisToggleRefinement',\n  mixins: [\n    createSuitMixin({ name: 'ToggleRefinement' }),\n    createWidgetMixin({ connector: connectToggleRefinement }),\n    createPanelConsumerMixin({\n      mapStateToCanRefine,\n    }),\n  ],\n  props: {\n    attribute: {\n      type: String,\n      required: true,\n    },\n    label: {\n      type: String,\n      required: true,\n    },\n    on: {\n      type: [String, Number, Boolean, Array],\n      required: false,\n      default: true,\n    },\n    off: {\n      type: [String, Number, Boolean, Array],\n      required: false,\n      // explicit otherwise Vue coerces the default value\n      // to false because of the `Boolean` prop type\n      default: undefined,\n    },\n  },\n  computed: {\n    widgetParams() {\n      return {\n        attribute: this.attribute,\n        label: this.label,\n        on: this.on,\n        off: this.off,\n      };\n    },\n    canRefine() {\n      return mapStateToCanRefine(this.state);\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"state\"\n    :class=\"suit()\"\n  >\n    <slot v-bind=\"rootSlotProps\">\n      <button\n        type=\"button\"\n        :class=\"suit('button')\"\n        :title=\"state.isBrowserSupported ? buttonTitle : disabledButtonTitle\"\n        :disabled=\"!state.isBrowserSupported\"\n        @click=\"handleClick\"\n      >\n        <slot\n          name=\"buttonText\"\n          v-bind=\"innerSlotProps\"\n        >\n          <svg\n            v-bind=\"buttonSvgAttrs\"\n            v-if=\"errorNotAllowed\"\n          >\n            <line\n              x1=\"1\"\n              y1=\"1\"\n              x2=\"23\"\n              y2=\"23\"\n            />\n            <path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\" />\n            <path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\" />\n            <line\n              x1=\"12\"\n              y1=\"19\"\n              x2=\"12\"\n              y2=\"23\"\n            />\n            <line\n              x1=\"8\"\n              y1=\"23\"\n              x2=\"16\"\n              y2=\"23\"\n            />\n          </svg>\n          <svg\n            v-bind=\"buttonSvgAttrs\"\n            v-else\n          >\n            <path\n              d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n              :fill=\"state.isListening ? 'currentColor' : 'none'\"\n            />\n            <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\" />\n            <line\n              x1=\"12\"\n              y1=\"19\"\n              x2=\"12\"\n              y2=\"23\"\n            />\n            <line\n              x1=\"8\"\n              y1=\"23\"\n              x2=\"16\"\n              y2=\"23\"\n            />\n          </svg>\n        </slot>\n      </button>\n      <div :class=\"suit('status')\">\n        <slot\n          name=\"status\"\n          v-bind=\"innerSlotProps\"\n        >\n          <p>{{ state.voiceListeningState.transcript }}</p>\n        </slot>\n      </div>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport { connectVoiceSearch } from 'instantsearch.js/es/connectors';\nimport { createSuitMixin } from '../mixins/suit';\nimport { createWidgetMixin } from '../mixins/widget';\n\nexport default {\n  name: 'AisVoiceSearch',\n  mixins: [\n    createWidgetMixin({ connector: connectVoiceSearch }),\n    createSuitMixin({ name: 'VoiceSearch' }),\n  ],\n  props: {\n    searchAsYouSpeak: {\n      type: Boolean,\n      required: false,\n      default: undefined,\n    },\n    buttonTitle: {\n      type: String,\n      required: false,\n      default: 'Search by voice',\n    },\n    disabledButtonTitle: {\n      type: String,\n      required: false,\n      default: 'Search by voice (not supported on this browser)',\n    },\n  },\n  data() {\n    return {\n      buttonSvgAttrs: {\n        xmlns: 'http://www.w3.org/2000/svg',\n        width: '16',\n        height: '16',\n        viewBox: '0 0 24 24',\n        fill: 'none',\n        stroke: 'currentColor',\n        strokeWidth: '2',\n        strokeLinecap: 'round',\n        strokeLinejoin: 'round',\n      },\n    };\n  },\n  computed: {\n    widgetParams() {\n      return {\n        searchAsYouSpeak: this.searchAsYouSpeak,\n      };\n    },\n    errorNotAllowed() {\n      return (\n        this.state.voiceListeningState.status === 'error' &&\n        this.state.voiceListeningState.errorCode === 'not-allowed'\n      );\n    },\n    rootSlotProps() {\n      return {\n        isBrowserSupported: this.state.isBrowserSupported,\n        isListening: this.state.isListening,\n        toggleListening: this.state.toggleListening,\n        voiceListeningState: this.state.voiceListeningState,\n      };\n    },\n    innerSlotProps() {\n      return {\n        status: this.state.voiceListeningState.status,\n        errorCode: this.state.voiceListeningState.errorCode,\n        isListening: this.state.isListening,\n        transcript: this.state.voiceListeningState.transcript,\n        isSpeechFinal: this.state.voiceListeningState.isSpeechFinal,\n        isBrowserSupported: this.state.isBrowserSupported,\n      };\n    },\n  },\n  methods: {\n    handleClick(event) {\n      event.currentTarget.blur();\n      this.state.toggleListening();\n    },\n  },\n};\n</script>\n","/* eslint import/namespace: ['error', { allowComputed: true }]*/\n\nimport * as widgets from './widgets';\n\nexport const plugin = {\n  install(localVue) {\n    Object.keys(widgets).forEach(widgetName => {\n      localVue.component(widgets[widgetName].name, widgets[widgetName]);\n    });\n  },\n};\n","import instantsearch from 'instantsearch.js/es';\nimport algoliaHelper from 'algoliasearch-helper';\nconst { SearchParameters, SearchResults } = algoliaHelper;\nimport { _objectSpread } from './polyfills';\nimport { warn } from './warn';\n\nexport const createInstantSearch = instantSearchOptions => {\n  const search = instantsearch(instantSearchOptions);\n  const { searchClient, indexName } = instantSearchOptions;\n\n  // main API for SSR, called in asyncData of a root component which contains instantsearch\n  search.findResultsState = params => {\n    search.helper = algoliaHelper(\n      searchClient,\n      indexName,\n      _objectSpread({}, params, {\n        // parameters set by default\n        highlightPreTag: '__ais-highlight__',\n        highlightPostTag: '__/ais-highlight__',\n      })\n    );\n\n    return search.helper.searchOnce().then(({ content: lastResults }) => {\n      // The search instance needs to act as if this was a regular `search`\n      // but return a promise, since that is the interface of `asyncData`\n      search.helper.lastResults = lastResults;\n    });\n  };\n\n  // make sure correct data is available in each widget's state\n  // called in widget mixin\n  search.__forceRender = widget => {\n    if (!search.helper) {\n      warn(\n        '`instantsearch.findResultsState()` needs to be called when using `ais-instant-search-ssr`.'\n      );\n      return;\n    }\n\n    widget.init({\n      state: search.helper.lastResults._state,\n      helper: search.helper,\n      templatesConfig: {},\n      createURL: () => '#',\n      onHistoryChange: () => {},\n      instantSearchInstance: search,\n    });\n\n    widget.render({\n      state: search.helper.lastResults._state,\n      results: search.helper.lastResults,\n      helper: search.helper,\n      templatesConfig: {},\n      // TODO: use memory or real router\n      createURL: () => '#',\n      instantSearchInstance: search,\n      searchMetadata: {\n        isSearchStalled: false,\n      },\n    });\n  };\n\n  search.getState = () => {\n    if (search.helper === null || !search.helper.lastResults) {\n      return undefined;\n    }\n    return {\n      lastResults: JSON.parse(JSON.stringify(search.helper.lastResults)),\n    };\n  };\n\n  // called before app mounts on client\n  search.hydrate = instantSearchState => {\n    if (!instantSearchState || !instantSearchState.lastResults) {\n      warn('The result of `getState()` needs to be passed to `hydrate()`.');\n      return;\n    }\n    const { lastResults } = instantSearchState;\n    search.searchParameters = lastResults._state;\n    search.helper = algoliaHelper(searchClient, indexName, lastResults._state);\n    search.helper.lastResults = new SearchResults(\n      new SearchParameters(lastResults._state),\n      lastResults._rawResults\n    );\n\n    search.hydrated = true;\n  };\n\n  // put this in the user's root Vue instance\n  // we can then reuse that InstantSearch instance seamlessly from `ais-ssr`\n  const rootMixin = {\n    provide() {\n      return {\n        $_ais: search,\n      };\n    },\n  };\n\n  return {\n    instantsearch: search,\n    rootMixin,\n  };\n};\n"],"names":["createSuitMixin","ref","props","classNames","type","Object","default","undefined","methods","suit","element","modifier","const","className","widgetName","Error","elements","push","join","name","userClassName","this","cache","Set","warn","message","has","add","console","createWidgetMixin","inject","instantSearchInstance","from","tag","$options","_componentTag","TypeError","getParentIndex","data","state","created","connector","factory","updateState","widget","widgetParams","addWidgets","hydrated","$isServer","__forceRender","beforeDestroy","dispose","started","removeWidgets","watch","handler","nextWidgetParams","deep","isFirstRender","render","mixins","connectAutocomplete","escapeHTML","Boolean","required","computed","createPanelConsumerMixin","emitter","$emit","hasAlreadyEmitted","nextState","previousState","previousCanRefine","mapStateToCanRefine","nextCanRefine","connectBreadcrumb","canRefine","attributes","Array","separator","String","rootPath","transformItems","Function","items","isLastItem","index","length","connectClearRefinements","hasRefinements","excludedAttributes","includedAttributes","inheritAttrs","connectConfigure","searchParameters","$attrs","createElement","$scopedSlots","class","refine","EXPERIMENTAL_connectConfigureRelatedItems","hit","matchingPatterns","transformSearchParameters","connectCurrentRefinements","noRefinement","createItemKey","attribute","value","filters","capitalize","toString","charAt","toLocaleUpperCase","slice","level","Number","createURL","connectHierarchicalMenu","components","HierarchicalMenuList","limit","showMoreLimit","showMore","sortBy","showParentLevel","highlightedTagName","innerHTML","instantsearch","highlight","connectHitsWithInsights","hits","connectHitsPerPage","hasNoResults","selected","find","item","handleChange","indexWidget","provide","$_ais_getParentIndex","indexName","indexId","$slots","_objectSpread","target","i","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","defineProperty","configurable","writable","createInstantSearchComponent","component","$_ais_instantSearchInstance","searchClient","helper","setClient","search","setIndex","stalledSearchDelay","_stalledSearchDelay","routing","searchFunction","_searchFunction","client","addAlgoliaAgent","Vue","mounted","$nextTick","start","oldApiWarning","insightsClient","validator","router","stateMapping","apiKey","appId","$_ais","connectInfiniteHitsWithInsights","showPrevious","refinePrevious","refineNext","connectMenu","showShowMoreButton","connectNumericMenu","connectPagination","nbPages","padding","totalPages","showFirst","showLast","showNext","page","p","Math","min","max","$on","updateCanRefine","$destroy","theme","indexOf","algoliaUrl","location","hostname","connectQueryRules","trackedFilters","transformRuleContexts","ruleContexts","range","connectRange","Infinity","precision","minInput","maxInput","step","pow","values","minValue","minRange","maxValue","maxRange","connectRatingMenu","placeholder","autofocus","showLoadingIndicator","shouldShowLoadingIndicator","submitTitle","resetTitle","query","onFormSubmit","$refs","input","blur","onFormReset","noop","SearchInput","AisHighlight","connectRefinementList","searchable","searchablePlaceholder","operator","searchForFacetValuesQuery","searchForFacetValues","get","set","searchForItems","toggleShowMore","map","assign","_highlightResult","highlighted","escapeFacetValues","renderFn","unmountFn","init","results","resultsCopy","stateCopy","stateResults","connectSearchBox","localValue","$el","querySelector","isControlled","currentRefinement","val","snippet","connectSortBy","connectStats","count","connectToggleRefinement","label","on","off","connectVoiceSearch","searchAsYouSpeak","buttonTitle","disabledButtonTitle","buttonSvgAttrs","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","errorNotAllowed","voiceListeningState","status","errorCode","rootSlotProps","isBrowserSupported","isListening","toggleListening","innerSlotProps","transcript","isSpeechFinal","handleClick","event","currentTarget","plugin","install","localVue","widgets","createInstantSearch","instantSearchOptions","findResultsState","params","algoliaHelper","highlightPreTag","highlightPostTag","searchOnce","then","lastResults","_state","templatesConfig","onHistoryChange","searchMetadata","isSearchStalled","getState","JSON","parse","stringify","hydrate","instantSearchState","SearchResults","SearchParameters","_rawResults"],"mappings":"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"}